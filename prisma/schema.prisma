// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id             Int                           @id @default(autoincrement())
  // id          String          @id @default(uuid())
  name           String
  age            Int
  email          String?                       @unique
  largeNumber    BigInt
  // isAdmin        Boolean
  role           Role                          @default(BASIC)
  preferences    Json
  blob           Bytes
  blobs          Unsupported("DECIMAL(10, 8)")
  // posts       Post[]
  writtenPosts   Post[]                        @relation("WrittenPosts")
  favoritePosts  Post[]                        @relation("FavoritePosts")
  userPreference UserPreference?

  @@unique([name, age])
  @@index([email])
}

model UserPreference {
  id           Int     @id @default(autoincrement())
  emailUpdates Boolean
  user         User    @relation(fields: [userId], references: [id])
  userId       Int     @unique
}

model Post {
  id            Int        @id @default(autoincrement())
  title         String
  averageRating Float
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt
  author        User       @relation("WrittenPosts", fields: [authorId], references: [id])
  authorId      Int
  // authorId  String
  favoritedBy   User?      @relation("FavoritePosts", fields: [favoritedById], references: [id])
  favoritedById Int?
  categories    Category[]

  // @@id(id)
  // @@id([title, authorId])
}

model Category {
  id    Int    @id @default(autoincrement())
  name  String @unique
  posts Post[]
}

enum Role {
  BASIC
  ADMIN
}
